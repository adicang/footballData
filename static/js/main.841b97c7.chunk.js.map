{"version":3,"sources":["assets/football.png","assets/loader.gif","assets/shirt.png","components/Loader.jsx","components/teams-screen.jsx","components/single-team-screen.jsx","components/not-found.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","className","src","LoaderGif","Teams","props","useState","loading","setLoading","teams","setTeams","search","setSearch","allTeamsFiltered","setAllTeamsFiltered","useEffect","fetchData","a","fetch","headers","then","res","json","data","catch","err","filteredData","filter","item","name","toLowerCase","includes","length","bottom","type","placeholder","value","onChange","e","target","columns","defaultSortField","striped","noHeader","customStyles","keyField","id","progressComponent","onRowClicked","row","history","push","process","handleRowClick","onClick","selector","sortable","cell","crestUrl","EmptyTeamLogoSrc","rows","style","minHeight","headCells","paddingLeft","paddingRight","fontWeight","textAlign","margin","fontSize","cells","SingleTeam","team","setTeam","url_string","window","location","href","url","URL","teamId","searchParams","get","goBack","icon","faArrowLeft","top","faCalendarAlt","founded","faGlobe","website","faMapMarkerAlt","address","squad","shirtSrc","shirtNumber","left","NotFound","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.841b97c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/football.41a2b4b2.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.083a9a8d.gif\";","module.exports = __webpack_public_path__ + \"static/media/shirt.dcfa135e.png\";","import React from 'react';\n\nimport LoaderGif from '../assets/loader.gif';\nimport './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <div className='loader'>\n      <img src={LoaderGif} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\n\nimport Loader from './Loader';\nimport './teams-screen.scss';\nimport EmptyTeamLogoSrc from '../assets/football.png';\n\nimport DataTable from 'react-data-table-component';\nimport Fade from 'react-reveal/Fade';\n\nconst Teams = props => {\n  const [loading, setLoading] = useState(true);\n  const [teams, setTeams] = useState([]);\n  const [search, setSearch] = useState('');\n  const [allTeamsFiltered, setAllTeamsFiltered] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Get teams data from https://api.football-data.org\n  const fetchData = async () => {\n    setLoading(true);\n\n    await fetch('https://api.football-data.org/v2/competitions/2001/teams', {\n      headers: {\n        'X-Auth-Token': '3b697eaf3f134a8b84675732570a9beb'\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.teams) {\n          setTeams(data.teams);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (search !== '' || search !== null) {\n      const filteredData = teams.filter(\n        item =>\n          item.name && item.name.toLowerCase().includes(search.toLowerCase())\n      );\n\n      setAllTeamsFiltered(filteredData);\n    } else {\n      setAllTeamsFiltered(null);\n    }\n  }, [search]);\n\n  const handleRowClick = row => {\n    props.history.push(`${process.env.PUBLIC_URL}/team?id=${row.id}`);\n  };\n\n  return (\n    <div className='page-container'>\n      {loading && <Loader />}\n\n      {teams.length > 0 && (\n        <div className='table-container'>\n          <Fade bottom>\n            <div className='header-row'>\n              <h1>Football Teams</h1>\n              <input\n                type='text'\n                placeholder='Search by team name'\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n              />\n            </div>\n            <DataTable\n              className='table'\n              columns={columns}\n              data={search ? allTeamsFiltered : teams}\n              defaultSortField='founded'\n              striped\n              noHeader={true}\n              customStyles={customStyles}\n              keyField={teams.id}\n              progressComponent={<Loader />}\n              onRowClicked={row => handleRowClick(row)}\n            />\n          </Fade>\n        </div>\n      )}\n\n      {!loading && teams.length === 0 && (\n        <div className='no-results'>\n          <h1>Someting Went Wrong</h1>\n          <p>We could not fetch results</p>\n\n          <button onClick={() => fetchData()}>Try Again</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Teams;\n\n// Table columns\nconst columns = [\n  {\n    name: '',\n    selector: 'crestUrl',\n    sortable: false,\n    cell: row => (\n      <img\n        src={row.crestUrl ? row.crestUrl : EmptyTeamLogoSrc}\n        className='team-logo'\n      />\n    )\n  },\n  {\n    name: 'Name',\n    selector: 'name',\n    sortable: true\n  },\n  {\n    name: 'Founded',\n    selector: 'founded',\n    sortable: true\n  },\n  {\n    name: 'Address',\n    selector: 'address',\n    sortable: true\n  }\n];\n\n// Table Styles\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '55px'\n    }\n  },\n  headCells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px',\n      fontWeight: 'bold',\n      textAlign: 'right',\n      margin: '0 auto',\n      fontSize: '15px'\n    }\n  },\n  cells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px',\n      fontSize: '15px'\n    }\n  }\n};\n","import React, { useEffect, useState } from 'react';\n\nimport Loader from './Loader';\nimport './single-team-screen.scss';\nimport EmptyTeamLogoSrc from '../assets/football.png';\nimport shirtSrc from '../assets/shirt.png';\n\nimport DataTable from 'react-data-table-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMapMarkerAlt,\n  faGlobe,\n  faCalendarAlt,\n  faArrowLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport Fade from 'react-reveal/Fade';\n\nconst SingleTeam = props => {\n  const [loading, setLoading] = useState(true);\n  const [team, setTeam] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Get team id from url and data from https://api.football-data.org\n  const fetchData = async () => {\n    setLoading(true);\n\n    let url_string = window.location.href;\n    let url = new URL(url_string);\n    let teamId = url.searchParams.get('id');\n\n    await fetch(`https://api.football-data.org/v2/teams/${teamId}`, {\n      headers: {\n        'X-Auth-Token': '3b697eaf3f134a8b84675732570a9beb'\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data) {\n          setTeam(data);\n        }\n        setLoading(false);\n      })\n      .catch(err => setLoading(false));\n  };\n\n  return (\n    <div className='page-container-single-team'>\n      <div className='go-back' onClick={() => props.history.goBack()}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n        Back to teams list\n      </div>\n\n      {loading && <Loader />}\n\n      {team && (\n        <Fade top>\n          <div className='team-container'>\n            <div className='header'>\n              <img\n                src={team.crestUrl ? team.crestUrl : EmptyTeamLogoSrc}\n                className='team-logo'\n              />\n              <h1>{team.name}</h1>\n            </div>\n\n            <div className='inner-team-container'>\n              <div className='details-container'>\n                <p>\n                  <FontAwesomeIcon icon={faCalendarAlt} />\n                  Founded: <span>{team.founded}</span>\n                </p>\n                <p>\n                  <FontAwesomeIcon icon={faGlobe} />\n                  Website:{' '}\n                  <a href={team.website} target='_blank'>\n                    {team.website}\n                  </a>\n                </p>\n                <p>\n                  <FontAwesomeIcon icon={faMapMarkerAlt} />\n                  Address: {team.address}\n                </p>\n              </div>\n\n              <div className='players-container'>\n                <h3>Squad:</h3>\n                <DataTable\n                  className='squad-table'\n                  columns={columns}\n                  data={team.squad}\n                  defaultSortField='shirtNumber'\n                  striped\n                  noHeader={true}\n                  customStyles={customStyles}\n                  keyField={team.squad.id}\n                  progressComponent={<Loader />}\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      )}\n\n      {!loading && !team && (\n        <div className='no-results'>\n          <h1>Someting Went Wrong</h1>\n          <p>We could not fetch results</p>\n\n          <button onClick={() => fetchData()}>Try Again</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SingleTeam;\n\n// Table Styles\nconst customStyles = {\n  rows: {\n    style: {\n      minHeight: '55px'\n    }\n  },\n  headCells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px',\n      fontWeight: 'bold',\n      textAlign: 'right',\n      margin: '0 auto',\n      fontSize: '15px'\n    }\n  },\n  cells: {\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '8px',\n      fontSize: '15px'\n    }\n  }\n};\n\n// Table columns\nconst columns = [\n  {\n    name: 'Name',\n    selector: 'name',\n    sortable: true\n  },\n  {\n    name: '',\n    sortable: false,\n    cell: row => {\n      return (\n        <div className='player-shirt'>\n          <img src={shirtSrc} />\n          <span style={row.shirtNumber < 10 ? { left: '40%' } : {}}>\n            {row.shirtNumber}\n          </span>\n        </div>\n      );\n    }\n  }\n];\n","import React from 'react';\n\nimport './not-found.scss';\n\nconst NotFound = props => {\n  return (\n    <div className='not-found-page-container'>\n      <h1>Page Not Found</h1>\n      <p>Sorry, this page does not exist</p>\n\n      <button onClick={() => props.history.push(process.env.PUBLIC_URL + '/')}>\n        Click here to go home\n      </button>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Teams from './components/teams-screen';\nimport SingleTeam from './components/single-team-screen';\nimport NotFound from './components/not-found';\n\nconst App = props => {\n  return (\n    <Router>\n      <div className='App'>\n        <Switch>\n          <Route\n            path={process.env.PUBLIC_URL + '/'}\n            exact\n            component={Teams}\n          ></Route>\n          <Route\n            path={process.env.PUBLIC_URL + '/team'}\n            exact\n            component={SingleTeam}\n          ></Route>\n          <Route path={process.env.PUBLIC_URL} component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}